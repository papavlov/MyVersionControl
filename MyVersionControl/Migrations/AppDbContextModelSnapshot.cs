// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyVersionControl.Models;

#nullable disable

namespace MyVersionControl.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyVersionControl.Models.Commit", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IssueId"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PullRequestId")
                        .HasColumnType("int");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IssueId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PullRequestId");

                    b.HasIndex("RepositoryId");

                    b.ToTable("Commits");
                });

            modelBuilder.Entity("MyVersionControl.Models.Issue", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IssueId"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IssueId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RepositoryId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("MyVersionControl.Models.Modification", b =>
                {
                    b.Property<int>("ModificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModificationId"));

                    b.Property<int>("CommitId")
                        .HasColumnType("int");

                    b.Property<string>("FileDifferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ModificationId");

                    b.HasIndex("CommitId");

                    b.ToTable("Modifications");
                });

            modelBuilder.Entity("MyVersionControl.Models.PullRequest", b =>
                {
                    b.Property<int>("PullRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PullRequestId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("int");

                    b.HasKey("PullRequestId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("RepositoryId");

                    b.ToTable("PullRequests");
                });

            modelBuilder.Entity("MyVersionControl.Models.Repository", b =>
                {
                    b.Property<int>("RepositoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepositoryId"));

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RepositoryId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Repositories");
                });

            modelBuilder.Entity("MyVersionControl.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RepositoryUser", b =>
                {
                    b.Property<int>("ContributedRepositoriesRepositoryId")
                        .HasColumnType("int");

                    b.Property<int>("ContributorsUserId")
                        .HasColumnType("int");

                    b.HasKey("ContributedRepositoriesRepositoryId", "ContributorsUserId");

                    b.HasIndex("ContributorsUserId");

                    b.ToTable("RepositoryContributors", (string)null);
                });

            modelBuilder.Entity("MyVersionControl.Models.Commit", b =>
                {
                    b.HasOne("MyVersionControl.Models.User", "CreatedBy")
                        .WithMany("Commits")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyVersionControl.Models.PullRequest", null)
                        .WithMany("Commits")
                        .HasForeignKey("PullRequestId");

                    b.HasOne("MyVersionControl.Models.Repository", "Repository")
                        .WithMany("Commits")
                        .HasForeignKey("RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Repository");
                });

            modelBuilder.Entity("MyVersionControl.Models.Issue", b =>
                {
                    b.HasOne("MyVersionControl.Models.User", "CreatedBy")
                        .WithMany("Issues")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyVersionControl.Models.Repository", "Repository")
                        .WithMany("Issues")
                        .HasForeignKey("RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Repository");
                });

            modelBuilder.Entity("MyVersionControl.Models.Modification", b =>
                {
                    b.HasOne("MyVersionControl.Models.Commit", "Commit")
                        .WithMany()
                        .HasForeignKey("CommitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commit");
                });

            modelBuilder.Entity("MyVersionControl.Models.PullRequest", b =>
                {
                    b.HasOne("MyVersionControl.Models.User", "Author")
                        .WithMany("PullRequests")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyVersionControl.Models.Repository", "Repository")
                        .WithMany("PullRequests")
                        .HasForeignKey("RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Repository");
                });

            modelBuilder.Entity("MyVersionControl.Models.Repository", b =>
                {
                    b.HasOne("MyVersionControl.Models.User", "Owner")
                        .WithMany("Repositories")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RepositoryUser", b =>
                {
                    b.HasOne("MyVersionControl.Models.Repository", null)
                        .WithMany()
                        .HasForeignKey("ContributedRepositoriesRepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyVersionControl.Models.User", null)
                        .WithMany()
                        .HasForeignKey("ContributorsUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyVersionControl.Models.PullRequest", b =>
                {
                    b.Navigation("Commits");
                });

            modelBuilder.Entity("MyVersionControl.Models.Repository", b =>
                {
                    b.Navigation("Commits");

                    b.Navigation("Issues");

                    b.Navigation("PullRequests");
                });

            modelBuilder.Entity("MyVersionControl.Models.User", b =>
                {
                    b.Navigation("Commits");

                    b.Navigation("Issues");

                    b.Navigation("PullRequests");

                    b.Navigation("Repositories");
                });
#pragma warning restore 612, 618
        }
    }
}
